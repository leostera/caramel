; (rule
;  (alias stdlib)
;  (targets
;   result.cmi
;   beam.cmi
;   beam.core
;   binary.cmi
;   binary.core
;   calendar.cmi
;   calendar.core
;   caramel_runtime.cmi
;   core.cmi
;   core.core
;   erlang.cmi
;   erlang.core
;   ets.cmi
;   ets.core
;   io.cmi
;   io.core
;   lists.cmi
;   maps.cmi
;   maps.core
;   math.cmi
;   process.cmi
;   process.core
;   timer.cmi)
;  (deps ../caramel/bin/main.exe)
;  (action
;   (run
;    %{dep:../caramel/bin/main.exe}
;    compile
;    --no-stdlib
;    binary.ml
;    calendar.ml
;    erlang.ml
;    ets.ml
;    lists.ml
;    maps.ml
;    math.ml
;    caramel_runtime.ml
;    core.ml
;    timer.ml
;    process.ml
;    io.mli
;    beam.ml
;    io.ml
;    result.ml)))
; 
; (install
;  (section lib)
;  (files
;   (beam.ml as stdlib/beam.ml)
;   (beam.core as stdlib/beam.core)
;   (beam.cmi as stdlib/beam.cmi)
;   (core.ml as stdlib/core.ml)
;   (core.core as stdlib/core.core)
;   (core.cmi as stdlib/core.cmi)
;   (binary.ml as stdlib/binary.ml)
;   (binary.core as stdlib/binary.core)
;   (binary.cmi as stdlib/binary.cmi)
;   (calendar.ml as stdlib/calendar.ml)
;   (calendar.core as stdlib/calendar.core)
;   (calendar.cmi as stdlib/calendar.cmi)
;   (caramel_runtime.ml as stdlib/caramel_runtime.ml)
;   (caramel_runtime.cmi as stdlib/caramel_runtime.cmi)
;   (erlang.ml as stdlib/erlang.ml)
;   (erlang.core as stdlib/erlang.core)
;   (erlang.cmi as stdlib/erlang.cmi)
;   (result.ml as stdlib/result.ml)
;   (result.cmi as stdlib/result.cmi)
;   (ets.ml as stdlib/ets.ml)
;   (ets.core as stdlib/ets.core)
;   (ets.cmi as stdlib/ets.cmi)
;   (io.mli as stdlib/io.mli)
;   (io.ml as stdlib/io.ml)
;   (io.core as stdlib/io.core)
;   (io.cmi as stdlib/io.cmi)
;   (lists.ml as stdlib/lists.ml)
;   (lists.cmi as stdlib/lists.cmi)
;   (maps.ml as stdlib/maps.ml)
;   (maps.core as stdlib/maps.core)
;   (maps.cmi as stdlib/maps.cmi)
;   (math.ml as stdlib/math.ml)
;   (math.cmi as stdlib/math.cmi)
;   (process.ml as stdlib/process.ml)
;   (process.core as stdlib/process.core)
;   (process.cmi as stdlib/process.cmi)
;   (timer.ml as stdlib/timer.ml)
;   (timer.cmi as stdlib/timer.cmi))
;  (package caramel))
; 
; (install
;  (section lib)
;  (files
;   (result.core as stdlib/result.core)
;   (caramel_runtime.core as stdlib/caramel_runtime.core))
;  (package caramel))
